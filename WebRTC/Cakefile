# https://github.com/jcampbell05/xcake
# http://www.rubydoc.info/github/jcampbell05/xcake/master/file/docs/Cakefile.md

iOSdeploymentTarget = "8.0"
companyIdentifier = "org.webrtc"

project.name = "WebRTC"
project.class_prefix = "RTC"

#=== DEFAULT target settings

project.all_configurations.each do |configuration|
    configuration.settings["SDKROOT"] = "iphoneos"
    configuration.settings["DEBUG_INFORMATION_FORMAT"] = "dwarf"
    configuration.settings["CODE_SIGN_IDENTITY[sdk=iphoneos*]"] = "iPhone Developer"
    configuration.settings["TARGETED_DEVICE_FAMILY"] = "1,2"
    configuration.settings["IPHONEOS_DEPLOYMENT_TARGET"] = iOSdeploymentTarget
    configuration.settings["VERSIONING_SYSTEM"] = "apple-generic"

    configuration.settings["GCC_NO_COMMON_BLOCKS"] = "YES"
    configuration.settings["GCC_WARN_ABOUT_RETURN_TYPE"] = "YES_ERROR"
    configuration.settings["GCC_WARN_UNINITIALIZED_AUTOS"] = "YES_AGGRESSIVE"
    configuration.settings["CLANG_WARN_DIRECT_OBJC_ISA_USAGE"] = "YES_ERROR"
    configuration.settings["CLANG_WARN_OBJC_ROOT_CLASS"] = "YES_ERROR"

    # configuration.settings["SWIFT_OPTIMIZATION_LEVEL"] = "-Onone"

    configuration.settings["CURRENT_PROJECT_VERSION"] = "1" # just default non-empty value

    configuration.settings["CLANG_WARN_INFINITE_RECURSION"] = "YES" # Xcode 8
    configuration.settings["CLANG_WARN_SUSPICIOUS_MOVE"] = "YES" # Xcode 8
    configuration.settings["ENABLE_STRICT_OBJC_MSGSEND"] = "YES" # Xcode 8

    configuration.settings["DEBUG_INFORMATION_FORMAT"] = "dwarf-with-dsym"
    # if configuration.name == "Release"
    #     configuration.settings["DEBUG_INFORMATION_FORMAT"] = "dwarf-with-dsym"
    #     # configuration.settings["SWIFT_OPTIMIZATION_LEVEL"] = "-Owholemodule" # Xcode 8
    # end
end

#===

#=== TARGETS

target do |target|
    target.name = project.name
    target.type = :framework
    target.language = :objc
    target.platform = :ios
    target.deployment_target = iOSdeploymentTarget

    #=== CUSTOM settings for the target

    target.include_files << "Framework/Classes/**/*.h"
    target.include_files << "Framework/Classes/**/*.m"
    target.include_files << "Framework/Classes/**/*.mm"
    target.include_files << "Framework/Classes/**/*.cc"
    target.include_files << "Framework/Native/**/*.h"
    target.include_files << "Framework/Native/**/*.m"
    target.include_files << "Framework/Native/**/*.mm"

    target.exclude_files << "Framework/Classes/Metal/RTCMTLNSVideoView.m"

    target.all_configurations.each do |configuration|
        configuration.product_bundle_identifier = companyIdentifier + "." + target.name
        configuration.settings["INFOPLIST_FILE"] = "Framework/Info.plist"

        configuration.settings["OTHER_LDFLAGS"] = "$(inherited)"
        configuration.settings["USER_HEADER_SEARCH_PATHS"] = "$(inherited) $(PROJECT_DIR)/Framework/Headers $(PROJECT_DIR)/Framework/Native"

        configuration.settings["DEFINES_MODULE"] = "YES"
        configuration.settings["MODULEMAP_FILE"] = "Framework/Modules/module.modulemap"
        configuration.settings["ENABLE_BITCODE"] = "NO"
        configuration.settings["MACH_O_TYPE"] = "mh_dylib"
        configuration.settings["CONFIGURATION_BUILD_DIR"] = "../"

        if configuration.name == "Release"
          configuration.settings["ONLY_ACTIVE_ARCH"] = "NO"
        else
          configuration.settings["ONLY_ACTIVE_ARCH"] = "YES"
        end
    end

    target.headers_build_phase do |phase|
      phase.public = Dir::glob("Framework/Headers/WebRTC/*.h");
    end
end
